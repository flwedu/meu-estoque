generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String            @db.VarChar(255)
  icon      String?           @db.VarChar(255)
  createdAt DateTime          @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime          @default(now()) @map("updated_at") @db.Timestamptz
  products  ProductCategory[]

  @@map("categories")
}

model Product {
  id         String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String            @db.VarChar(255)
  price      Decimal           @db.Decimal(10, 2)
  createdAt  DateTime          @default(now()) @map("created_at") @db.Timestamptz
  updatedAt  DateTime          @default(now()) @map("updated_at") @db.Timestamptz
  images     ProductImage[]
  categories ProductCategory[]
  stock      Stock[]
  Movement   Movement[]

  @@map("products")
}

model ProductImage {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  productId String   @map("product_id") @db.Uuid
  imageUrl  String   @map("image_url") @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz
  product   Product  @relation(fields: [productId], references: [id])

  @@index([productId])
  @@map("product_images")
}

model ProductCategory {
  productId  String   @map("product_id") @db.Uuid
  categoryId String   @map("category_id") @db.Uuid
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt  DateTime @default(now()) @map("updated_at") @db.Timestamptz
  product    Product  @relation(fields: [productId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([productId, categoryId])
  @@map("product_categories")
}

model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String   @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz

  @@map("users")
}

model Stock {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  productId String   @unique @map("product_id") @db.Uuid
  quantity  Int
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz
  product   Product  @relation(fields: [productId], references: [id])

  @@map("stock")
}

model Movement {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  productId String   @map("product_id") @db.Uuid
  quantity  Int
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz
  product   Product  @relation(fields: [productId], references: [id])

  @@map("movements")
}
